from collections import defaultdict

def numEquivDominoPairs(dominoes):
    '''
    :param dominoes: список доминошек (вллженный список элементами которого являются другие списки
    из двух чисел)
    :return: задача найти количество парных доминошек
    задача не проходит классическим перебор через цикл for - падаем в time limit. Модуль итертулз
    тоже не проходит. Решил через хеш таблицы. Идея в том, чтоб придумать ключ (условный шифр,
    который переведет два числа в одно), но при этом будут исключаться ситуации, в которых
    доминошка [1, 3] будет равно доминошке [2, 2], если использовать классическую сумму.
    В случае с преобразованием по принципу 10a+b мы получим ключи типа 13 и 22, которые и будем
    записывать в словарь для дальнейшего сравнения и подсчсета пар
    '''
    defDict, pairs = defaultdict(int), 0
    for a, b in dominoes:
        if a > b:
            a, b = b, a
        key = 10 * a + b
        pairs += defDict[key]
        defDict[key] += 1
    return pairs


# dominoes = [[1,2],[1,2],[1,1],[1,2],[2,2]]
# print(numEquivDominoPairs(dominoes))