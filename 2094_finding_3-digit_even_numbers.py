def findEvenNumbers(digits: list) -> list:
    '''
    :param digits: список чисел от 0 до 9. Нужно составить из этих чисел трехначные четные числа
    :return: вернуть эти числа в порядке возрастания
    Сначала начинаешь думать в другую сторону) Но чуть позже в голову приходит вот какая мысль:
    всего есть 450 возможных чисел подходящих по условию задачи: все четные от 100 до 998 включительно.
    Так почему бы просто не проверить вот какое условие: могу ли я составить из данных мне чисел очередное
    четное трехначное число? Если судить такими категориями, то сначала сформируем словарь, в котором соберем
    количество каждого числа в заданном списке, в потом проверим нашу гипотезу обычным циклом.
    lvl - easy, но задача не такая простая, как кажется)
    '''
    numbersDict = {num: 0 for num in range(10)}
    for num in digits:
        numbersDict[num] += 1

    resultList = []
    for number in range(100, 1000, 2):
        if all([numbersDict[int(num)] >= str(number).count(num) for num in str(number)]):
            resultList.append(number)

    return resultList


# digits = [2, 1, 3, 0]
# print(findEvenNumbers(digits))
