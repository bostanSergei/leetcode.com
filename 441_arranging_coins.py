def arrangeCoins(n: int) -> int:
    '''
    :param n: на вход подается количество "кубиков" из которых надо построить лестницу.
    :return: нам нужно ответить на вопрос: сколько целых рядов можно "построить" данном количестве кубиков
    1                   Чтоб было более понятно. Слева - лестница. Числа - порядковый номер "кубика"
    2  3                Имея 5 кубиков мы можем построить только 2 полных ряда. И имея 6 кубиков - уже 3
    4  5  6             В общем, идея, думаю понятна. Ясно, что есть "формула" с помощью которой можно
    7  8  9  10         выполнить расчет и вернуть результат за O(1), но поскольку задача алгоритмическая,
    11 12 13 14 15      я её и решил как алгоритмическую. lvl - easy
    '''
    coins, row, newRow = 0, 0, 1
    while coins < n:
        coins += newRow
        if coins > n:
            return row

        row += 1
        newRow += 1

    return row


# num = 15
# print(arrangeCoins(num))
