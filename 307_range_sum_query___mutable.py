class NumArray:
    '''
    Задача: сформировать класс, который при инициалиции будет принимать список чисел. У объекта должно быть два
    метода. Первый - это изменение значения по индексу. Второй - это возврат суммы среза списка.
    lvl - medium. в решениях видел использование деревьев в этой задаче, но поскольку я пока слаб в этой теме,
    пришлось решать по старинке. Идея в следующем. В самом начале при иницализации массива посчитать сумму и запомнить её.
    В случае изменения занчения массива, мы отнимем старое значение и добавин новое. А в методе суммы диапазона будем
    смотреть на границы, передаваемые при вызове. Если от начала до конца - вернем сумму, которая уже посчитана.
    Если размер среза, для которого требуется посчитать сумму больше половины длины массива, то мы от суммы (уже посчитанной)
    будем отнимать левую и правую сумму. Иначе считать сумму сереидны.
    '''
    def __init__(self, nums: list):
        self.nums = nums
        self.lenList = len(nums)
        self.result = sum(nums)

    def update(self, index: int, val: int) -> None:
        self.result -= self.nums[index]
        self.nums[index] = val
        self.result += val

    def sumRange(self, left: int, right: int) -> int:
        if left == 0 and right == self.lenList:
            return self.result

        if right - left > self.lenList / 2:
            return self.result - sum(self.nums[0:left]) - sum(self.nums[right+1:])

        return sum(self.nums[left:right+1])
