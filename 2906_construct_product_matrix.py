def constructProductMatrix(grid: list) -> list:
    '''
    :param grid: матрица
    :return: вернуть новую матрицу
    задачка конечно жесть) попила кровушки) lvl - medium. Суть задачи - создать новую матрицу с такой же размерностью
    как и стартовая, но каждый элемент матрицы - это произведение всех остальных элементов матрицы кроме того, на который
    мы смотрим в настоящий момент времени по модулю на число 12345. Расписывать решение думаю нет особо смысла:
    код максимально понятен. Идея первого цикла и идея пары дополнительных условий связана с вопросом о необходимости
    или НЕ необходимости лишних вычислений, которые забирают на себя кучу времени при этом никак не влияя на исход.
    '''
    row, col, mod = len(grid), len(grid[0]), 1
    matrix = [[0] * col for i in range(row)]
    indexesList, zeroCount = [], 0

    for i in range(row):
        for j in range(col):
            if grid[i][j] % 12345 == 0:
                indexesList.append([i, j])
                zeroCount += 1

    if zeroCount >= 2:
        return matrix

    for i in range(row):
        for j in range(col):
            mod *= grid[i][j]

    if zeroCount == 1:
        matrix[indexesList[0][0]][indexesList[0][1]] = (mod // grid[indexesList[0][0]][indexesList[0][1]]) % 12345
        return matrix

    for i in range(row):
        for j in range(col):
            matrix[i][j] = (mod // grid[i][j]) % 12345

    # print(*matrix, sep='\n')
    return matrix


grid
# grid = [[12345], [2], [1]]
print(constructProductMatrix(grid))
