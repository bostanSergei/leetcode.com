def findJudge(n: int, trust: list) -> int:
    '''
    :param n: количество жителей в городе
    :param trust: список списков, значения которых два целых числа: порядковый номер жителя и тот человек, которму он
    доверяет (тоже порядковый номер)
    :return: нужно вернуть порядковый номер человека, который является судьей.
    Существует два критерия, которые помогут определить факт наличия судьи в городе: судье доверяют все жители и
    судья никому не доверяет. Вернуть порядковый номер судьи или -1 если судью вычислить не удалось.
    Задача интересная, lvl - easy, пришлось немного повозиться с логикой, но в целом все решается (в моем случае)
    через словарь в котором собираются порядковые номера жителей, которым доверяют те или иные люди и сравнением
    итоговых результатов с общим количеством жителей.
    '''
    if n == 1:
        return 1

    newDict, allPeople = {}, []
    for i in trust:
        if i[1] not in newDict:
            newDict[i[1]] = []
        newDict[i[1]].append(i[0])

        if i[0] not in allPeople:
            allPeople.append(i[0])

    allPeople.sort()

    for key, value in newDict.items():
        if sorted(value) == allPeople and len(value) == n - 1:
            return key

    print(allPeople)
    print(newDict)
    return -1


# n = 4
# trust = [[1, 3], [1, 4], [2, 3], [2, 4], [4, 3]]
# trust = [[1, 3], [2, 3], [3, 1]]
# print(findJudge(n, trust))
