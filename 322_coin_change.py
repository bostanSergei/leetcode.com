def coinChange(coins: list, amount: int) -> int:
    '''
    :param coins: список номиналов монет, которые мы можем использовать для сдачи
    :param amount: сумма, которую нужно вернуть
    :return: минимальное количество монет, которыми мы можем набрать указанную сумму
    lvl - medium. Задача на динамическое програмирование. Суть в следующем. Перед началом основного цикла мы
    должны инициализировать массив, в котором количество значений будет на единицу больше, чем сумма, которую нам
    необходимо вернуть, а значениями будут либо inf, либо максимально допустимое число из условия задачи.
    Первое значение инициализируем нулем, а далее в цикле нам требуется перебрать все номиналы монет и на каждой
    иттерации ответить на вопрос: какое количество монет требуется для того, чтобы набрать нужную сумму.
    По завершению цикла последний элемент массива будет иметь либо стартовое значение (тогда сдачу вернуть
    не получится), либо итоговаое значение.
    '''
    changeList = [float('inf')] * (amount + 1)

    changeList[0] = 0
    for coin in coins:
        for i in range(coin, amount + 1):
            changeList[i] = min(changeList[i], changeList[i - coin] + 1)

    return changeList[amount] if changeList[amount] != float('inf') else -1


coins = [1, 2, 5]
amount = 11
print(coinChange(coins, amount))
