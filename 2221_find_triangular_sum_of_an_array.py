def triangularSum(nums):
    '''
    :param nums: список чисел
    :return: int - одно единственное число
    Представим треугольник Паскаля, только перевернутый. Основание - вверху, вершина - внизу.
    Нам дано основание - список чисел nums. Числа однозначные (т.е. меньше 10)
    Нам нужно дойти до вершины (нижней точки треугольника), где каждый следующий список
    меньше на одно число, но определяется по тому же принципу что и в треугольнике Паскаля
    за одним единственным исключением: числа не могут больше 10, то есть каждая новая сумма
    будет делиться с остатком на 10.
    Если бы основание (старт nums) состояло бы из след.чисел: [9, 3, 5, 7, 2]
    то следующая строчка была бы:                              [2, 8, 2, 9]
    и так далее:                                                [0, 0, 1]
    Ровно до тех пор, пока мы не получим вершину. Вершина в нашем случае и будет ответом
    '''
    while len(nums) > 1:
        resNum = []
        for i in range(1, len(nums)):
            resNum.append((nums[i - 1] + nums[i]) % 10)
        nums = resNum
    return nums[0]


# nums = [1,2,3,4,5]
# print(triangularSum(nums))